# Test generated by RoostGPT for test test-assembler-vertex using AI Model vertex

from __future__ import print_function
import sys


def loadFile(fileName):
    """
    loadFile: This function loads the file and reads its lines.
    """
    global lines
    fo = open(fileName)
    for line in fo:
        lines.append(line)
    fo.close()


def TestLoadFilebd5dab72d5():
    """
    TestLoadFilebd5dab72d5: This test case checks if the loadFile function is working correctly.
    """
    lines = []
    loadFile("test.txt")
    t.Log("The number of lines in the file is: " + str(len(lines)))
    t.AssertEqual(len(lines), 3, "The number of lines in the file is not equal to 3.")


def TestLoadFileWithNonExistingFile():
    """
    TestLoadFileWithNonExistingFile: This test case checks if the loadFile function throws an exception when the file does not exist.
    """
    lines = []
    try:
        loadFile("non_existing_file.txt")
    except Exception as e:
        t.Log("The exception is: " + str(e))
        t.AssertEqual(str(e), "FileNotFoundError: [Errno 2] No such file or directory: 'non_existing_file.txt'", "The exception is not correct.")


if __name__ == "__main__":
    t = unittest.TestCase()
    TestLoadFilebd5dab72d5()
    TestLoadFileWithNonExistingFile()
    t.Run()